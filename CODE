#include <vector>
#include <unordered_map>

class Solution {
public:
    int tupleSameProduct(std::vector<int>& nums) {
        std::unordered_map<int, int> productCount;
        int n = nums.size();
        int result = 0;

        // Compute all pairs (a, b) and store their product frequencies
        for (int i = 0; i < n; ++i) {
            for (int j = i + 1; j < n; ++j) {
                int product = nums[i] * nums[j];
                productCount[product]++;
            }
        }

        // Count valid tuples
        for (const auto& [product, freq] : productCount) {
            if (freq > 1) {
                result += (freq * (freq - 1) / 2) * 8;
            }
        }

        return result;
    }
};
